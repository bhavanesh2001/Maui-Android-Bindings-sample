//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#nullable restore
using System;
using System.Collections.Generic;
using Android.Runtime;
using Java.Interop;

namespace Com.Example.Androidlibrary {

	// Metadata.xml XPath class reference: path="/api/package[@name='com.example.androidlibrary']/class[@name='MathOperations']"
	[global::Android.Runtime.Register ("com/example/androidlibrary/MathOperations", DoNotGenerateAcw=true)]
	public partial class MathOperations : global::Java.Lang.Object {
		static readonly JniPeerMembers _members = new XAPeerMembers ("com/example/androidlibrary/MathOperations", typeof (MathOperations));

		internal static IntPtr class_ref {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		public override global::Java.Interop.JniPeerMembers JniPeerMembers {
			get { return _members; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override IntPtr ThresholdClass {
			get { return _members.JniPeerType.PeerReference.Handle; }
		}

		[global::System.Diagnostics.DebuggerBrowsable (global::System.Diagnostics.DebuggerBrowsableState.Never)]
		[global::System.ComponentModel.EditorBrowsable (global::System.ComponentModel.EditorBrowsableState.Never)]
		protected override global::System.Type ThresholdType {
			get { return _members.ManagedPeerType; }
		}

		protected MathOperations (IntPtr javaReference, JniHandleOwnership transfer) : base (javaReference, transfer)
		{
		}

		// Metadata.xml XPath constructor reference: path="/api/package[@name='com.example.androidlibrary']/class[@name='MathOperations']/constructor[@name='MathOperations' and count(parameter)=0]"
		[Register (".ctor", "()V", "")]
		public unsafe MathOperations () : base (IntPtr.Zero, JniHandleOwnership.DoNotTransfer)
		{
			const string __id = "()V";

			if (((global::Java.Lang.Object) this).Handle != IntPtr.Zero)
				return;

			try {
				var __r = _members.InstanceMethods.StartCreateInstance (__id, ((object) this).GetType (), null);
				SetHandle (__r.Handle, JniHandleOwnership.TransferLocalRef);
				_members.InstanceMethods.FinishCreateInstance (__id, this, null);
			} finally {
			}
		}

		static Delegate? cb_add_II;
#pragma warning disable 0169
		static Delegate GetAdd_IIHandler ()
		{
			if (cb_add_II == null)
				cb_add_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_I (n_Add_II));
			return cb_add_II;
		}

		static int n_Add_II (IntPtr jnienv, IntPtr native__this, int a, int b)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Example.Androidlibrary.MathOperations> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Add (a, b);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.example.androidlibrary']/class[@name='MathOperations']/method[@name='add' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("add", "(II)I", "GetAdd_IIHandler")]
		public virtual unsafe int Add (int a, int b)
		{
			const string __id = "add.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (a);
				__args [1] = new JniArgumentValue (b);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_divide_II;
#pragma warning disable 0169
		static Delegate GetDivide_IIHandler ()
		{
			if (cb_divide_II == null)
				cb_divide_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_D (n_Divide_II));
			return cb_divide_II;
		}

		static double n_Divide_II (IntPtr jnienv, IntPtr native__this, int a, int b)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Example.Androidlibrary.MathOperations> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Divide (a, b);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.example.androidlibrary']/class[@name='MathOperations']/method[@name='divide' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("divide", "(II)D", "GetDivide_IIHandler")]
		public virtual unsafe double Divide (int a, int b)
		{
			const string __id = "divide.(II)D";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (a);
				__args [1] = new JniArgumentValue (b);
				var __rm = _members.InstanceMethods.InvokeVirtualDoubleMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_modulus_II;
#pragma warning disable 0169
		static Delegate GetModulus_IIHandler ()
		{
			if (cb_modulus_II == null)
				cb_modulus_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_I (n_Modulus_II));
			return cb_modulus_II;
		}

		static int n_Modulus_II (IntPtr jnienv, IntPtr native__this, int a, int b)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Example.Androidlibrary.MathOperations> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Modulus (a, b);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.example.androidlibrary']/class[@name='MathOperations']/method[@name='modulus' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("modulus", "(II)I", "GetModulus_IIHandler")]
		public virtual unsafe int Modulus (int a, int b)
		{
			const string __id = "modulus.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (a);
				__args [1] = new JniArgumentValue (b);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_multiply_II;
#pragma warning disable 0169
		static Delegate GetMultiply_IIHandler ()
		{
			if (cb_multiply_II == null)
				cb_multiply_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_I (n_Multiply_II));
			return cb_multiply_II;
		}

		static int n_Multiply_II (IntPtr jnienv, IntPtr native__this, int a, int b)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Example.Androidlibrary.MathOperations> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Multiply (a, b);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.example.androidlibrary']/class[@name='MathOperations']/method[@name='multiply' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("multiply", "(II)I", "GetMultiply_IIHandler")]
		public virtual unsafe int Multiply (int a, int b)
		{
			const string __id = "multiply.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (a);
				__args [1] = new JniArgumentValue (b);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_power_DD;
#pragma warning disable 0169
		static Delegate GetPower_DDHandler ()
		{
			if (cb_power_DD == null)
				cb_power_DD = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPDD_D (n_Power_DD));
			return cb_power_DD;
		}

		static double n_Power_DD (IntPtr jnienv, IntPtr native__this, double @base, double exponent)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Example.Androidlibrary.MathOperations> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Power (@base, exponent);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.example.androidlibrary']/class[@name='MathOperations']/method[@name='power' and count(parameter)=2 and parameter[1][@type='double'] and parameter[2][@type='double']]"
		[Register ("power", "(DD)D", "GetPower_DDHandler")]
		public virtual unsafe double Power (double @base, double exponent)
		{
			const string __id = "power.(DD)D";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (@base);
				__args [1] = new JniArgumentValue (exponent);
				var __rm = _members.InstanceMethods.InvokeVirtualDoubleMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_squareRoot_D;
#pragma warning disable 0169
		static Delegate GetSquareRoot_DHandler ()
		{
			if (cb_squareRoot_D == null)
				cb_squareRoot_D = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPD_D (n_SquareRoot_D));
			return cb_squareRoot_D;
		}

		static double n_SquareRoot_D (IntPtr jnienv, IntPtr native__this, double number)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Example.Androidlibrary.MathOperations> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.SquareRoot (number);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.example.androidlibrary']/class[@name='MathOperations']/method[@name='squareRoot' and count(parameter)=1 and parameter[1][@type='double']]"
		[Register ("squareRoot", "(D)D", "GetSquareRoot_DHandler")]
		public virtual unsafe double SquareRoot (double number)
		{
			const string __id = "squareRoot.(D)D";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [1];
				__args [0] = new JniArgumentValue (number);
				var __rm = _members.InstanceMethods.InvokeVirtualDoubleMethod (__id, this, __args);
				return __rm;
			} finally {
			}
		}

		static Delegate? cb_subtract_II;
#pragma warning disable 0169
		static Delegate GetSubtract_IIHandler ()
		{
			if (cb_subtract_II == null)
				cb_subtract_II = JNINativeWrapper.CreateDelegate (new _JniMarshal_PPII_I (n_Subtract_II));
			return cb_subtract_II;
		}

		static int n_Subtract_II (IntPtr jnienv, IntPtr native__this, int a, int b)
		{
			var __this = global::Java.Lang.Object.GetObject<global::Com.Example.Androidlibrary.MathOperations> (jnienv, native__this, JniHandleOwnership.DoNotTransfer)!;
			return __this.Subtract (a, b);
		}
#pragma warning restore 0169

		// Metadata.xml XPath method reference: path="/api/package[@name='com.example.androidlibrary']/class[@name='MathOperations']/method[@name='subtract' and count(parameter)=2 and parameter[1][@type='int'] and parameter[2][@type='int']]"
		[Register ("subtract", "(II)I", "GetSubtract_IIHandler")]
		public virtual unsafe int Subtract (int a, int b)
		{
			const string __id = "subtract.(II)I";
			try {
				JniArgumentValue* __args = stackalloc JniArgumentValue [2];
				__args [0] = new JniArgumentValue (a);
				__args [1] = new JniArgumentValue (b);
				var __rm = _members.InstanceMethods.InvokeVirtualInt32Method (__id, this, __args);
				return __rm;
			} finally {
			}
		}

	}
}
